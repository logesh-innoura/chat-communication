{"ast":null,"code":"/*! @azure/msal-browser v3.7.0 2024-01-09 */\n'use strict';\n\nimport { createBrowserConfigurationAuthError } from '../error/BrowserConfigurationAuthError.mjs';\nimport { stubbedPublicClientApplicationCalled } from '../error/BrowserConfigurationAuthErrorCodes.mjs';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\nconst stubbedPublicClientApplication = {\n  initialize: () => {\n    return Promise.reject(createBrowserConfigurationAuthError(stubbedPublicClientApplicationCalled));\n  },\n  acquireTokenPopup: () => {\n    return Promise.reject(createBrowserConfigurationAuthError(stubbedPublicClientApplicationCalled));\n  },\n  acquireTokenRedirect: () => {\n    return Promise.reject(createBrowserConfigurationAuthError(stubbedPublicClientApplicationCalled));\n  },\n  acquireTokenSilent: () => {\n    return Promise.reject(createBrowserConfigurationAuthError(stubbedPublicClientApplicationCalled));\n  },\n  acquireTokenByCode: () => {\n    return Promise.reject(createBrowserConfigurationAuthError(stubbedPublicClientApplicationCalled));\n  },\n  getAllAccounts: () => {\n    return [];\n  },\n  getAccountByHomeId: () => {\n    return null;\n  },\n  getAccountByUsername: () => {\n    return null;\n  },\n  getAccountByLocalId: () => {\n    return null;\n  },\n  handleRedirectPromise: () => {\n    return Promise.reject(createBrowserConfigurationAuthError(stubbedPublicClientApplicationCalled));\n  },\n  loginPopup: () => {\n    return Promise.reject(createBrowserConfigurationAuthError(stubbedPublicClientApplicationCalled));\n  },\n  loginRedirect: () => {\n    return Promise.reject(createBrowserConfigurationAuthError(stubbedPublicClientApplicationCalled));\n  },\n  logout: () => {\n    return Promise.reject(createBrowserConfigurationAuthError(stubbedPublicClientApplicationCalled));\n  },\n  logoutRedirect: () => {\n    return Promise.reject(createBrowserConfigurationAuthError(stubbedPublicClientApplicationCalled));\n  },\n  logoutPopup: () => {\n    return Promise.reject(createBrowserConfigurationAuthError(stubbedPublicClientApplicationCalled));\n  },\n  ssoSilent: () => {\n    return Promise.reject(createBrowserConfigurationAuthError(stubbedPublicClientApplicationCalled));\n  },\n  addEventCallback: () => {\n    return null;\n  },\n  removeEventCallback: () => {\n    return;\n  },\n  addPerformanceCallback: () => {\n    return \"\";\n  },\n  removePerformanceCallback: () => {\n    return false;\n  },\n  enableAccountStorageEvents: () => {\n    return;\n  },\n  disableAccountStorageEvents: () => {\n    return;\n  },\n  getTokenCache: () => {\n    throw createBrowserConfigurationAuthError(stubbedPublicClientApplicationCalled);\n  },\n  getLogger: () => {\n    throw createBrowserConfigurationAuthError(stubbedPublicClientApplicationCalled);\n  },\n  setLogger: () => {\n    return;\n  },\n  setActiveAccount: () => {\n    return;\n  },\n  getActiveAccount: () => {\n    return null;\n  },\n  initializeWrapperLibrary: () => {\n    return;\n  },\n  setNavigationClient: () => {\n    return;\n  },\n  getConfiguration: () => {\n    throw createBrowserConfigurationAuthError(stubbedPublicClientApplicationCalled);\n  },\n  hydrateCache: () => {\n    return Promise.reject(createBrowserConfigurationAuthError(stubbedPublicClientApplicationCalled));\n  },\n  clearCache: () => {\n    return Promise.reject(createBrowserConfigurationAuthError(stubbedPublicClientApplicationCalled));\n  }\n};\nexport { stubbedPublicClientApplication };","map":{"version":3,"names":["stubbedPublicClientApplication","initialize","Promise","reject","createBrowserConfigurationAuthError","stubbedPublicClientApplicationCalled","acquireTokenPopup","acquireTokenRedirect","acquireTokenSilent","acquireTokenByCode","getAllAccounts","getAccountByHomeId","getAccountByUsername","getAccountByLocalId","handleRedirectPromise","loginPopup","loginRedirect","logout","logoutRedirect","logoutPopup","ssoSilent","addEventCallback","removeEventCallback","addPerformanceCallback","removePerformanceCallback","enableAccountStorageEvents","disableAccountStorageEvents","getTokenCache","getLogger","setLogger","setActiveAccount","getActiveAccount","initializeWrapperLibrary","setNavigationClient","getConfiguration","hydrateCache","clearCache"],"sources":["D:\\selvakumar\\java-chat-repo\\websocket-springboot-01\\Java-chatapp\\chatclient\\node_modules\\@azure\\msal-browser\\src\\app\\IPublicClientApplication.ts"],"sourcesContent":["/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport {\r\n    AccountInfo,\r\n    Logger,\r\n    PerformanceCallbackFunction,\r\n} from \"@azure/msal-common\";\r\nimport { RedirectRequest } from \"../request/RedirectRequest\";\r\nimport { PopupRequest } from \"../request/PopupRequest\";\r\nimport { SilentRequest } from \"../request/SilentRequest\";\r\nimport { SsoSilentRequest } from \"../request/SsoSilentRequest\";\r\nimport { EndSessionRequest } from \"../request/EndSessionRequest\";\r\nimport {\r\n    BrowserConfigurationAuthErrorCodes,\r\n    createBrowserConfigurationAuthError,\r\n} from \"../error/BrowserConfigurationAuthError\";\r\nimport { WrapperSKU } from \"../utils/BrowserConstants\";\r\nimport { INavigationClient } from \"../navigation/INavigationClient\";\r\nimport { EndSessionPopupRequest } from \"../request/EndSessionPopupRequest\";\r\nimport { ITokenCache } from \"../cache/ITokenCache\";\r\nimport { AuthorizationCodeRequest } from \"../request/AuthorizationCodeRequest\";\r\nimport { BrowserConfiguration } from \"../config/Configuration\";\r\nimport { AuthenticationResult } from \"../response/AuthenticationResult\";\r\nimport { EventCallbackFunction } from \"../event/EventMessage\";\r\nimport { ClearCacheRequest } from \"../request/ClearCacheRequest\";\r\n\r\nexport interface IPublicClientApplication {\r\n    initialize(): Promise<void>;\r\n    acquireTokenPopup(request: PopupRequest): Promise<AuthenticationResult>;\r\n    acquireTokenRedirect(request: RedirectRequest): Promise<void>;\r\n    acquireTokenSilent(\r\n        silentRequest: SilentRequest\r\n    ): Promise<AuthenticationResult>;\r\n    acquireTokenByCode(\r\n        request: AuthorizationCodeRequest\r\n    ): Promise<AuthenticationResult>;\r\n    addEventCallback(callback: EventCallbackFunction): string | null;\r\n    removeEventCallback(callbackId: string): void;\r\n    addPerformanceCallback(callback: PerformanceCallbackFunction): string;\r\n    removePerformanceCallback(callbackId: string): boolean;\r\n    enableAccountStorageEvents(): void;\r\n    disableAccountStorageEvents(): void;\r\n    getAccountByHomeId(homeAccountId: string): AccountInfo | null;\r\n    getAccountByLocalId(localId: string): AccountInfo | null;\r\n    getAccountByUsername(userName: string): AccountInfo | null;\r\n    getAllAccounts(): AccountInfo[];\r\n    handleRedirectPromise(hash?: string): Promise<AuthenticationResult | null>;\r\n    loginPopup(request?: PopupRequest): Promise<AuthenticationResult>;\r\n    loginRedirect(request?: RedirectRequest): Promise<void>;\r\n    logout(logoutRequest?: EndSessionRequest): Promise<void>;\r\n    logoutRedirect(logoutRequest?: EndSessionRequest): Promise<void>;\r\n    logoutPopup(logoutRequest?: EndSessionPopupRequest): Promise<void>;\r\n    ssoSilent(request: SsoSilentRequest): Promise<AuthenticationResult>;\r\n    getTokenCache(): ITokenCache;\r\n    getLogger(): Logger;\r\n    setLogger(logger: Logger): void;\r\n    setActiveAccount(account: AccountInfo | null): void;\r\n    getActiveAccount(): AccountInfo | null;\r\n    initializeWrapperLibrary(sku: WrapperSKU, version: string): void;\r\n    setNavigationClient(navigationClient: INavigationClient): void;\r\n    /** @internal */\r\n    getConfiguration(): BrowserConfiguration;\r\n    hydrateCache(\r\n        result: AuthenticationResult,\r\n        request:\r\n            | SilentRequest\r\n            | SsoSilentRequest\r\n            | RedirectRequest\r\n            | PopupRequest\r\n    ): Promise<void>;\r\n    clearCache(logoutRequest?: ClearCacheRequest): Promise<void>;\r\n}\r\n\r\nexport const stubbedPublicClientApplication: IPublicClientApplication = {\r\n    initialize: () => {\r\n        return Promise.reject(\r\n            createBrowserConfigurationAuthError(\r\n                BrowserConfigurationAuthErrorCodes.stubbedPublicClientApplicationCalled\r\n            )\r\n        );\r\n    },\r\n    acquireTokenPopup: () => {\r\n        return Promise.reject(\r\n            createBrowserConfigurationAuthError(\r\n                BrowserConfigurationAuthErrorCodes.stubbedPublicClientApplicationCalled\r\n            )\r\n        );\r\n    },\r\n    acquireTokenRedirect: () => {\r\n        return Promise.reject(\r\n            createBrowserConfigurationAuthError(\r\n                BrowserConfigurationAuthErrorCodes.stubbedPublicClientApplicationCalled\r\n            )\r\n        );\r\n    },\r\n    acquireTokenSilent: () => {\r\n        return Promise.reject(\r\n            createBrowserConfigurationAuthError(\r\n                BrowserConfigurationAuthErrorCodes.stubbedPublicClientApplicationCalled\r\n            )\r\n        );\r\n    },\r\n    acquireTokenByCode: () => {\r\n        return Promise.reject(\r\n            createBrowserConfigurationAuthError(\r\n                BrowserConfigurationAuthErrorCodes.stubbedPublicClientApplicationCalled\r\n            )\r\n        );\r\n    },\r\n    getAllAccounts: () => {\r\n        return [];\r\n    },\r\n    getAccountByHomeId: () => {\r\n        return null;\r\n    },\r\n    getAccountByUsername: () => {\r\n        return null;\r\n    },\r\n    getAccountByLocalId: () => {\r\n        return null;\r\n    },\r\n    handleRedirectPromise: () => {\r\n        return Promise.reject(\r\n            createBrowserConfigurationAuthError(\r\n                BrowserConfigurationAuthErrorCodes.stubbedPublicClientApplicationCalled\r\n            )\r\n        );\r\n    },\r\n    loginPopup: () => {\r\n        return Promise.reject(\r\n            createBrowserConfigurationAuthError(\r\n                BrowserConfigurationAuthErrorCodes.stubbedPublicClientApplicationCalled\r\n            )\r\n        );\r\n    },\r\n    loginRedirect: () => {\r\n        return Promise.reject(\r\n            createBrowserConfigurationAuthError(\r\n                BrowserConfigurationAuthErrorCodes.stubbedPublicClientApplicationCalled\r\n            )\r\n        );\r\n    },\r\n    logout: () => {\r\n        return Promise.reject(\r\n            createBrowserConfigurationAuthError(\r\n                BrowserConfigurationAuthErrorCodes.stubbedPublicClientApplicationCalled\r\n            )\r\n        );\r\n    },\r\n    logoutRedirect: () => {\r\n        return Promise.reject(\r\n            createBrowserConfigurationAuthError(\r\n                BrowserConfigurationAuthErrorCodes.stubbedPublicClientApplicationCalled\r\n            )\r\n        );\r\n    },\r\n    logoutPopup: () => {\r\n        return Promise.reject(\r\n            createBrowserConfigurationAuthError(\r\n                BrowserConfigurationAuthErrorCodes.stubbedPublicClientApplicationCalled\r\n            )\r\n        );\r\n    },\r\n    ssoSilent: () => {\r\n        return Promise.reject(\r\n            createBrowserConfigurationAuthError(\r\n                BrowserConfigurationAuthErrorCodes.stubbedPublicClientApplicationCalled\r\n            )\r\n        );\r\n    },\r\n    addEventCallback: () => {\r\n        return null;\r\n    },\r\n    removeEventCallback: () => {\r\n        return;\r\n    },\r\n    addPerformanceCallback: () => {\r\n        return \"\";\r\n    },\r\n    removePerformanceCallback: () => {\r\n        return false;\r\n    },\r\n    enableAccountStorageEvents: () => {\r\n        return;\r\n    },\r\n    disableAccountStorageEvents: () => {\r\n        return;\r\n    },\r\n    getTokenCache: () => {\r\n        throw createBrowserConfigurationAuthError(\r\n            BrowserConfigurationAuthErrorCodes.stubbedPublicClientApplicationCalled\r\n        );\r\n    },\r\n    getLogger: () => {\r\n        throw createBrowserConfigurationAuthError(\r\n            BrowserConfigurationAuthErrorCodes.stubbedPublicClientApplicationCalled\r\n        );\r\n    },\r\n    setLogger: () => {\r\n        return;\r\n    },\r\n    setActiveAccount: () => {\r\n        return;\r\n    },\r\n    getActiveAccount: () => {\r\n        return null;\r\n    },\r\n    initializeWrapperLibrary: () => {\r\n        return;\r\n    },\r\n    setNavigationClient: () => {\r\n        return;\r\n    },\r\n    getConfiguration: () => {\r\n        throw createBrowserConfigurationAuthError(\r\n            BrowserConfigurationAuthErrorCodes.stubbedPublicClientApplicationCalled\r\n        );\r\n    },\r\n    hydrateCache: () => {\r\n        return Promise.reject(\r\n            createBrowserConfigurationAuthError(\r\n                BrowserConfigurationAuthErrorCodes.stubbedPublicClientApplicationCalled\r\n            )\r\n        );\r\n    },\r\n    clearCache: () => {\r\n        return Promise.reject(\r\n            createBrowserConfigurationAuthError(\r\n                BrowserConfigurationAuthErrorCodes.stubbedPublicClientApplicationCalled\r\n            )\r\n        );\r\n    },\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}