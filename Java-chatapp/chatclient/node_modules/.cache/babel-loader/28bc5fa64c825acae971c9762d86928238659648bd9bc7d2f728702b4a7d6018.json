{"ast":null,"code":"/*! @azure/msal-common v14.6.0 2024-01-09 */\n'use strict';\n\nimport { createClientAuthError } from '../error/ClientAuthError.mjs';\nimport { methodNotImplemented } from '../error/ClientAuthErrorCodes.mjs';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\nconst StubbedNetworkModule = {\n  sendGetRequestAsync: () => {\n    return Promise.reject(createClientAuthError(methodNotImplemented));\n  },\n  sendPostRequestAsync: () => {\n    return Promise.reject(createClientAuthError(methodNotImplemented));\n  }\n};\nexport { StubbedNetworkModule };","map":{"version":3,"names":["StubbedNetworkModule","sendGetRequestAsync","Promise","reject","createClientAuthError","methodNotImplemented","sendPostRequestAsync"],"sources":["D:\\selvakumar\\java-chat-repo\\websocket-springboot-01\\Java-chatapp\\chatclient\\node_modules\\@azure\\msal-common\\src\\network\\INetworkModule.ts"],"sourcesContent":["/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport {\r\n    ClientAuthErrorCodes,\r\n    createClientAuthError,\r\n} from \"../error/ClientAuthError\";\r\nimport { NetworkResponse } from \"./NetworkManager\";\r\n\r\n/**\r\n * Options allowed by network request APIs.\r\n */\r\nexport type NetworkRequestOptions = {\r\n    headers?: Record<string, string>;\r\n    body?: string;\r\n};\r\n\r\n/**\r\n * Client network interface to send backend requests.\r\n * @interface\r\n */\r\nexport interface INetworkModule {\r\n    /**\r\n     * Interface function for async network \"GET\" requests. Based on the Fetch standard: https://fetch.spec.whatwg.org/\r\n     * @param url\r\n     * @param requestParams\r\n     * @param enableCaching\r\n     */\r\n    sendGetRequestAsync<T>(\r\n        url: string,\r\n        options?: NetworkRequestOptions,\r\n        cancellationToken?: number\r\n    ): Promise<NetworkResponse<T>>;\r\n\r\n    /**\r\n     * Interface function for async network \"POST\" requests. Based on the Fetch standard: https://fetch.spec.whatwg.org/\r\n     * @param url\r\n     * @param requestParams\r\n     * @param enableCaching\r\n     */\r\n    sendPostRequestAsync<T>(\r\n        url: string,\r\n        options?: NetworkRequestOptions\r\n    ): Promise<NetworkResponse<T>>;\r\n}\r\n\r\nexport const StubbedNetworkModule: INetworkModule = {\r\n    sendGetRequestAsync: () => {\r\n        return Promise.reject(\r\n            createClientAuthError(ClientAuthErrorCodes.methodNotImplemented)\r\n        );\r\n    },\r\n    sendPostRequestAsync: () => {\r\n        return Promise.reject(\r\n            createClientAuthError(ClientAuthErrorCodes.methodNotImplemented)\r\n        );\r\n    },\r\n};\r\n"],"mappings":";;;;;;AAAA;;;AAGG;AA6CU,MAAAA,oBAAoB,GAAmB;EAChDC,mBAAmB,EAAEA,CAAA,KAAK;IACtB,OAAOC,OAAO,CAACC,MAAM,CACjBC,qBAAqB,CAACC,oBAAyC,CAAC,CACnE;GACJ;EACDC,oBAAoB,EAAEA,CAAA,KAAK;IACvB,OAAOJ,OAAO,CAACC,MAAM,CACjBC,qBAAqB,CAACC,oBAAyC,CAAC,CACnE"},"metadata":{},"sourceType":"module","externalDependencies":[]}