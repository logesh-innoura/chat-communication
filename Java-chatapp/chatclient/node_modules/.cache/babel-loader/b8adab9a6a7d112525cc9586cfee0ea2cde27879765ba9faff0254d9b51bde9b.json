{"ast":null,"code":"/*! @azure/msal-browser v3.7.0 2024-01-09 */\n'use strict';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\nclass NavigationClient {\n  /**\r\n   * Navigates to other pages within the same web application\r\n   * @param url\r\n   * @param options\r\n   */\n  navigateInternal(url, options) {\n    return NavigationClient.defaultNavigateWindow(url, options);\n  }\n  /**\r\n   * Navigates to other pages outside the web application i.e. the Identity Provider\r\n   * @param url\r\n   * @param options\r\n   */\n  navigateExternal(url, options) {\n    return NavigationClient.defaultNavigateWindow(url, options);\n  }\n  /**\r\n   * Default navigation implementation invoked by the internal and external functions\r\n   * @param url\r\n   * @param options\r\n   */\n  static defaultNavigateWindow(url, options) {\n    if (options.noHistory) {\n      window.location.replace(url);\n    } else {\n      window.location.assign(url);\n    }\n    return new Promise(resolve => {\n      setTimeout(() => {\n        resolve(true);\n      }, options.timeout);\n    });\n  }\n}\nexport { NavigationClient };","map":{"version":3,"names":["NavigationClient","navigateInternal","url","options","defaultNavigateWindow","navigateExternal","noHistory","window","location","replace","assign","Promise","resolve","setTimeout","timeout"],"sources":["D:\\selvakumar\\java-chat-repo\\websocket-springboot-01\\Java-chatapp\\chatclient\\node_modules\\@azure\\msal-browser\\src\\navigation\\NavigationClient.ts"],"sourcesContent":["/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { INavigationClient } from \"./INavigationClient\";\r\nimport { NavigationOptions } from \"./NavigationOptions\";\r\n\r\nexport class NavigationClient implements INavigationClient {\r\n    /**\r\n     * Navigates to other pages within the same web application\r\n     * @param url\r\n     * @param options\r\n     */\r\n    navigateInternal(\r\n        url: string,\r\n        options: NavigationOptions\r\n    ): Promise<boolean> {\r\n        return NavigationClient.defaultNavigateWindow(url, options);\r\n    }\r\n\r\n    /**\r\n     * Navigates to other pages outside the web application i.e. the Identity Provider\r\n     * @param url\r\n     * @param options\r\n     */\r\n    navigateExternal(\r\n        url: string,\r\n        options: NavigationOptions\r\n    ): Promise<boolean> {\r\n        return NavigationClient.defaultNavigateWindow(url, options);\r\n    }\r\n\r\n    /**\r\n     * Default navigation implementation invoked by the internal and external functions\r\n     * @param url\r\n     * @param options\r\n     */\r\n    private static defaultNavigateWindow(\r\n        url: string,\r\n        options: NavigationOptions\r\n    ): Promise<boolean> {\r\n        if (options.noHistory) {\r\n            window.location.replace(url);\r\n        } else {\r\n            window.location.assign(url);\r\n        }\r\n\r\n        return new Promise((resolve) => {\r\n            setTimeout(() => {\r\n                resolve(true);\r\n            }, options.timeout);\r\n        });\r\n    }\r\n}\r\n"],"mappings":";;;AAAA;;;AAGG;MAKUA,gBAAgB;EACzB;;;;AAIG;EACHC,gBAAgBA,CACZC,GAAW,EACXC,OAA0B;IAE1B,OAAOH,gBAAgB,CAACI,qBAAqB,CAACF,GAAG,EAAEC,OAAO,CAAC;;EAG/D;;;;AAIG;EACHE,gBAAgBA,CACZH,GAAW,EACXC,OAA0B;IAE1B,OAAOH,gBAAgB,CAACI,qBAAqB,CAACF,GAAG,EAAEC,OAAO,CAAC;;EAG/D;;;;AAIG;EACK,OAAOC,qBAAqBA,CAChCF,GAAW,EACXC,OAA0B;IAE1B,IAAIA,OAAO,CAACG,SAAS,EAAE;MACnBC,MAAM,CAACC,QAAQ,CAACC,OAAO,CAACP,GAAG,CAAC;IAC/B,OAAM;MACHK,MAAM,CAACC,QAAQ,CAACE,MAAM,CAACR,GAAG,CAAC;IAC9B;IAED,OAAO,IAAIS,OAAO,CAAEC,OAAO,IAAI;MAC3BC,UAAU,CAAC,MAAK;QACZD,OAAO,CAAC,IAAI,CAAC;MACjB,CAAC,EAAET,OAAO,CAACW,OAAO,CAAC;IACvB,CAAC,CAAC;;AAET"},"metadata":{},"sourceType":"module","externalDependencies":[]}