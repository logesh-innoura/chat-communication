{"ast":null,"code":"var _jsxFileName = \"/Users/logeshramesh/Projects/websocket-springboot-01/Java-chatapp/chatclient/src/components/ChatRoom.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { over } from 'stompjs';\nimport SockJS from 'sockjs-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar stompClient = null;\nconst ChatRoom = () => {\n  _s();\n  var _memberList$filter;\n  const [privateChats, setPrivateChats] = useState([]);\n  const [message, setMessages] = useState([]);\n  const [publicChats, setPublicChats] = useState([]);\n  const [memberList, setMemberList] = useState([]);\n  const [tab, setTab] = useState(\"CHATROOM\");\n  const [userData, setUserData] = useState({\n    username: '',\n    receivername: '',\n    connected: false,\n    message: ''\n  });\n\n  // useEffect(() => {\n  //     // Check if userData is available in localStorage\n  //     const storedUserData = localStorage.getItem('userData');\n  //     if (storedUserData) {\n  //       try {\n  //         const parsedUserData = JSON.parse(storedUserData);\n\n  //         // If userData is available and connected is true, establish the connection\n  //         if (parsedUserData && parsedUserData.connected) {\n  //           setUserData(parsedUserData);\n  //           connect();\n  //         }\n  //       } catch (error) {\n  //         console.error('Error parsing userData:', error);\n  //       }\n  //     }\n  //   }, []);\n\n  const fetchUsers = async () => {\n    try {\n      const response = await fetch('http://localhost:8080/api/users', {\n        headers: {\n          'Content-Type': 'application/json',\n          'X-Tenant': 'default',\n          'Authorization': \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6IjVCM25SeHRRN2ppOGVORGMzRnkwNUtmOTdaRSIsImtpZCI6IjVCM25SeHRRN2ppOGVORGMzRnkwNUtmOTdaRSJ9.eyJhdWQiOiJhcGk6Ly9mOTJkZGIwNS1iNzVjLTQ0NTktOTEwZi03M2M1OGQ3NWY1ZjUiLCJpc3MiOiJodHRwczovL3N0cy53aW5kb3dzLm5ldC9iNGQzNGU0Mi03OWE2LTQ3OGUtYjNhZi0xMmNlNzMxMWZhMDkvIiwiaWF0IjoxNzA1MzAyNzEwLCJuYmYiOjE3MDUzMDI3MTAsImV4cCI6MTcwNTMwODExNiwiYWNjdCI6MCwiYWNyIjoiMSIsImFpbyI6IkFUUUF5LzhWQUFBQWVVTmVGZG5OaWtPc0ZRbzlTK3RTSlc1THpjcTljVEtrSm5uU3F1NHBRUHdjNlF0NUw3YjdWNVY5TlFvUUxDVUYiLCJhbXIiOlsicHdkIl0sImFwcGlkIjoiZjkyZGRiMDUtYjc1Yy00NDU5LTkxMGYtNzNjNThkNzVmNWY1IiwiYXBwaWRhY3IiOiIxIiwiaXBhZGRyIjoiMjcuNC4xNDEuMjgiLCJsb2dpbl9oaW50IjoiTy5DaVEzWVRFeE5XRXpaUzAxTkRVeUxUUXhOemt0T0RjNE5DMWpaRGN6TWpReFpUTXlaV01TSkdJMFpETTBaVFF5TFRjNVlUWXRORGM0WlMxaU0yRm1MVEV5WTJVM016RXhabUV3T1JvbmJHOW5aWE5vTURGQVpXNWphWEJvWlhKb1pXRnNkR2d1YjI1dGFXTnliM052Wm5RdVkyOXRJQ0E9IiwibmFtZSI6ImxvZ2VzaCIsIm9pZCI6IjdhMTE1YTNlLTU0NTItNDE3OS04Nzg0LWNkNzMyNDFlMzJlYyIsInByZWZlcnJlZF91c2VybmFtZSI6ImxvZ2VzaDAxQGVuY2lwaGVyaGVhbHRoLm9ubWljcm9zb2Z0LmNvbSIsInJoIjoiMC5BYmNBUWs3VHRLWjVqa2V6cnhMT2N4SDZDUVhiTGZsY3QxbEVrUTl6eFkxMTlmWEpBSDguIiwicm9sZXMiOlsiQURNSU4iXSwic2NwIjoiZW5jaXBoZXJoZWFsdGgtbXVsdGl0ZW5hbnQuc2NvcGUiLCJzaWQiOiIxMzg0YWEyMC04ZDg0LTRkZjUtODYzYy05MWJiZWVmNDUwOTUiLCJzdWIiOiJ0eTNGa3VjRDlnbEVDeFVfWW82MFRhUWVxU29ybG5yYjM2MVRPcWxlc1RNIiwidGVuYW50X2N0cnkiOiJVUyIsInRlbmFudF9yZWdpb25fc2NvcGUiOiJOQSIsInRpZCI6ImI0ZDM0ZTQyLTc5YTYtNDc4ZS1iM2FmLTEyY2U3MzExZmEwOSIsInVuaXF1ZV9uYW1lIjoibG9nZXNoMDFAZW5jaXBoZXJoZWFsdGgub25taWNyb3NvZnQuY29tIiwidXBuIjoibG9nZXNoMDFAZW5jaXBoZXJoZWFsdGgub25taWNyb3NvZnQuY29tIiwidXRpIjoiRks0M2g4N0JkMGFwZUcyTW83eDhBQSIsInZlciI6IjEuMCIsIndpZHMiOlsiYjc5ZmJmNGQtM2VmOS00Njg5LTgxNDMtNzZiMTk0ZTg1NTA5Il19.VGRvLuKUIo4x0GgXOVdRZcyUZ8aBt-mOoYc_8663mpieeHrHme62CMljU8N5zP0Uc1rmPwJ1hDRAfAsXBqS4zbL9xQ0eylRyhl5iXY6iTxM2aFubRIjVbrqS5XQAP4I5Y_DRvR3QrSKCt2CKlCy3ph0IOm2fVWEMQoyZIXr95VRSZwhulpEH6c4ShO8A2dfnax2IjXkyqsePErs9LC4hEjus4vjoifmLnPgxeScNheWFm56b04TmnYmsdmNPzCVMvXqd3_onTZyJ315ef8H0GnZ0qC8US3aO7sG3xVwopu_feQUK2EtElOp0oCCIjBoWST4HnvCvu2mk8fT6mXgr6A\"\n        }\n      });\n      const data = await response.json();\n      const temp = [];\n      data.forEach(item => {\n        temp.push(item.name);\n      });\n      setMemberList(temp);\n    } catch (error) {\n      console.error('Error fetching users:', error);\n    }\n  };\n  useEffect(() => {\n    fetchUsers();\n  }, []);\n  useEffect(() => {\n    if (tab !== 'CHATROOM') onTabChange(tab);\n  }, [privateChats]);\n  const connect = () => {\n    let Sock = new SockJS('http://localhost:8080/ws', {\n      headers: {\n        'Content-Type': 'application/json',\n        'X-Tenant': 'default',\n        'Authorization': \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6IjVCM25SeHRRN2ppOGVORGMzRnkwNUtmOTdaRSIsImtpZCI6IjVCM25SeHRRN2ppOGVORGMzRnkwNUtmOTdaRSJ9.eyJhdWQiOiJhcGk6Ly9mOTJkZGIwNS1iNzVjLTQ0NTktOTEwZi03M2M1OGQ3NWY1ZjUiLCJpc3MiOiJodHRwczovL3N0cy53aW5kb3dzLm5ldC9iNGQzNGU0Mi03OWE2LTQ3OGUtYjNhZi0xMmNlNzMxMWZhMDkvIiwiaWF0IjoxNzA1MzAyNzEwLCJuYmYiOjE3MDUzMDI3MTAsImV4cCI6MTcwNTMwODExNiwiYWNjdCI6MCwiYWNyIjoiMSIsImFpbyI6IkFUUUF5LzhWQUFBQWVVTmVGZG5OaWtPc0ZRbzlTK3RTSlc1THpjcTljVEtrSm5uU3F1NHBRUHdjNlF0NUw3YjdWNVY5TlFvUUxDVUYiLCJhbXIiOlsicHdkIl0sImFwcGlkIjoiZjkyZGRiMDUtYjc1Yy00NDU5LTkxMGYtNzNjNThkNzVmNWY1IiwiYXBwaWRhY3IiOiIxIiwiaXBhZGRyIjoiMjcuNC4xNDEuMjgiLCJsb2dpbl9oaW50IjoiTy5DaVEzWVRFeE5XRXpaUzAxTkRVeUxUUXhOemt0T0RjNE5DMWpaRGN6TWpReFpUTXlaV01TSkdJMFpETTBaVFF5TFRjNVlUWXRORGM0WlMxaU0yRm1MVEV5WTJVM016RXhabUV3T1JvbmJHOW5aWE5vTURGQVpXNWphWEJvWlhKb1pXRnNkR2d1YjI1dGFXTnliM052Wm5RdVkyOXRJQ0E9IiwibmFtZSI6ImxvZ2VzaCIsIm9pZCI6IjdhMTE1YTNlLTU0NTItNDE3OS04Nzg0LWNkNzMyNDFlMzJlYyIsInByZWZlcnJlZF91c2VybmFtZSI6ImxvZ2VzaDAxQGVuY2lwaGVyaGVhbHRoLm9ubWljcm9zb2Z0LmNvbSIsInJoIjoiMC5BYmNBUWs3VHRLWjVqa2V6cnhMT2N4SDZDUVhiTGZsY3QxbEVrUTl6eFkxMTlmWEpBSDguIiwicm9sZXMiOlsiQURNSU4iXSwic2NwIjoiZW5jaXBoZXJoZWFsdGgtbXVsdGl0ZW5hbnQuc2NvcGUiLCJzaWQiOiIxMzg0YWEyMC04ZDg0LTRkZjUtODYzYy05MWJiZWVmNDUwOTUiLCJzdWIiOiJ0eTNGa3VjRDlnbEVDeFVfWW82MFRhUWVxU29ybG5yYjM2MVRPcWxlc1RNIiwidGVuYW50X2N0cnkiOiJVUyIsInRlbmFudF9yZWdpb25fc2NvcGUiOiJOQSIsInRpZCI6ImI0ZDM0ZTQyLTc5YTYtNDc4ZS1iM2FmLTEyY2U3MzExZmEwOSIsInVuaXF1ZV9uYW1lIjoibG9nZXNoMDFAZW5jaXBoZXJoZWFsdGgub25taWNyb3NvZnQuY29tIiwidXBuIjoibG9nZXNoMDFAZW5jaXBoZXJoZWFsdGgub25taWNyb3NvZnQuY29tIiwidXRpIjoiRks0M2g4N0JkMGFwZUcyTW83eDhBQSIsInZlciI6IjEuMCIsIndpZHMiOlsiYjc5ZmJmNGQtM2VmOS00Njg5LTgxNDMtNzZiMTk0ZTg1NTA5Il19.VGRvLuKUIo4x0GgXOVdRZcyUZ8aBt-mOoYc_8663mpieeHrHme62CMljU8N5zP0Uc1rmPwJ1hDRAfAsXBqS4zbL9xQ0eylRyhl5iXY6iTxM2aFubRIjVbrqS5XQAP4I5Y_DRvR3QrSKCt2CKlCy3ph0IOm2fVWEMQoyZIXr95VRSZwhulpEH6c4ShO8A2dfnax2IjXkyqsePErs9LC4hEjus4vjoifmLnPgxeScNheWFm56b04TmnYmsdmNPzCVMvXqd3_onTZyJ315ef8H0GnZ0qC8US3aO7sG3xVwopu_feQUK2EtElOp0oCCIjBoWST4HnvCvu2mk8fT6mXgr6A\"\n      }\n    });\n    stompClient = over(Sock);\n    stompClient.connect({}, onConnected, onError);\n  };\n  const onConnected = () => {\n    setUserData({\n      ...userData,\n      \"connected\": true\n    });\n    // localStorage.setItem('userData', JSON.stringify({ ...userData, \"connected\": true }));\n\n    stompClient.subscribe('/chatroom/public', onMessageReceived);\n    stompClient.subscribe('/user/' + userData.username + '/private', onPrivateMessage);\n    stompClient.subscribe('/user/' + userData.username + '/topic', onUpdatedUsersHistory);\n    // userJoin();\n  };\n\n  // const userJoin = () => {\n  //     var chatMessage = {\n  //         senderName: userData.username,\n  //         status: \"JOIN\"\n  //     };\n  //     stompClient.send(\"/app/message\", {}, JSON.stringify(chatMessage));\n  // }\n\n  const getCurrentTimestamp = () => {\n    const now = new Date();\n    const hours = now.getHours();\n    const minutes = now.getMinutes();\n    const day = now.getDate();\n    const month = now.getMonth() + 1;\n    const year = now.getFullYear();\n    const formattedTime = `${day < 10 ? '0' : ''}${day}-${month < 10 ? '0' : ''}${month}-${year}, ${hours % 12 || 12}:${minutes < 10 ? '0' : ''}${minutes} ${hours >= 12 ? 'pm' : 'am'}`;\n    return formattedTime;\n  };\n  const onMessageReceived = payload => {\n    var payloadData = JSON.parse(payload.body);\n    if (payloadData.status === \"MESSAGE\" && !payloadData.receiverName) {\n      setPublicChats(prevPublicChats => [...prevPublicChats, payloadData]);\n    }\n  };\n  const onPrivateMessage = payload => {\n    const payloadData = JSON.parse(payload.body);\n    setPrivateChats(temp => [...temp, payloadData]);\n  };\n  const onUpdatedUsersHistory = payload => {\n    const payloadData = JSON.parse(payload.body);\n    console.log(payload);\n  };\n  const onError = err => {\n    console.log(err);\n  };\n  const handleMessage = event => {\n    const {\n      value\n    } = event.target;\n    setUserData({\n      ...userData,\n      \"message\": value\n    });\n  };\n  const sendValue = () => {\n    if (stompClient) {\n      var chatMessage = {\n        senderName: userData.username,\n        message: userData.message,\n        date: getCurrentTimestamp(),\n        status: \"MESSAGE\"\n      };\n      stompClient.send(\"/app/message\", {}, JSON.stringify(chatMessage));\n      setUserData({\n        ...userData,\n        \"message\": \"\"\n      });\n    }\n  };\n  const sendPrivateValue = () => {\n    if (stompClient) {\n      const chatMessage = {\n        senderName: userData.username,\n        receiverName: tab,\n        message: userData.message,\n        date: getCurrentTimestamp(),\n        status: \"MESSAGE\"\n      };\n      setPrivateChats([...privateChats, chatMessage]);\n      stompClient.send(\"/app/private-message\", {}, JSON.stringify(chatMessage));\n      setUserData({\n        ...userData,\n        \"message\": \"\"\n      });\n    }\n  };\n  const handleUsername = event => {\n    const {\n      value\n    } = event.target;\n    setUserData({\n      ...userData,\n      \"username\": value\n    });\n  };\n  const registerUser = async () => {\n    if (!userData.username.trim()) {\n      alert('Username should not be empty');\n      return;\n    }\n    fetchUsers();\n    // Check if the entered username exists in the memberList\n    const isUsernameExists = memberList.some(user => user === userData.username);\n    if (isUsernameExists) {\n      try {\n        // Fetch messages for the user\n        const response = await fetch(`http://localhost:8080/api/messages/${userData.username}`);\n        const data = await response.json();\n\n        // Separate messages into public and private chats\n\n        const publicMessages = data.filter(message => !message.receiverName);\n        const privateMessages = data.filter(message => message.receiverName);\n        setPublicChats(publicMessages);\n        setPrivateChats(privateMessages);\n\n        // Connect to WebSocket after updating state\n        connect();\n      } catch (error) {\n        console.error('Error fetching user messages:', error);\n      }\n    } else {\n      try {\n        // If username doesn't exist, add user to the database\n        await addUserToDatabase(userData.username);\n\n        // After adding user to the database, connect to WebSocket\n        connect();\n      } catch (error) {\n        console.error('Error adding user to the database:', error);\n      }\n    }\n  };\n  const onTabChange = name => {\n    const messages = privateChats === null || privateChats === void 0 ? void 0 : privateChats.filter(item => {\n      var _ref, _ref2;\n      return ((_ref = [name, userData === null || userData === void 0 ? void 0 : userData.username]) === null || _ref === void 0 ? void 0 : _ref.includes(item.senderName)) && ((_ref2 = [name, userData.username]) === null || _ref2 === void 0 ? void 0 : _ref2.includes(item.receiverName));\n    });\n    setMessages(messages);\n  };\n  const addUserToDatabase = async username => {\n    try {\n      // Perform the necessary API call to add the user to the database\n      const response = await fetch('http://localhost:8080/api/addUser', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'X-Tenant': 'default',\n          'Authorization': \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6IjVCM25SeHRRN2ppOGVORGMzRnkwNUtmOTdaRSIsImtpZCI6IjVCM25SeHRRN2ppOGVORGMzRnkwNUtmOTdaRSJ9.eyJhdWQiOiJhcGk6Ly9mOTJkZGIwNS1iNzVjLTQ0NTktOTEwZi03M2M1OGQ3NWY1ZjUiLCJpc3MiOiJodHRwczovL3N0cy53aW5kb3dzLm5ldC9iNGQzNGU0Mi03OWE2LTQ3OGUtYjNhZi0xMmNlNzMxMWZhMDkvIiwiaWF0IjoxNzA1MzAyNzEwLCJuYmYiOjE3MDUzMDI3MTAsImV4cCI6MTcwNTMwODExNiwiYWNjdCI6MCwiYWNyIjoiMSIsImFpbyI6IkFUUUF5LzhWQUFBQWVVTmVGZG5OaWtPc0ZRbzlTK3RTSlc1THpjcTljVEtrSm5uU3F1NHBRUHdjNlF0NUw3YjdWNVY5TlFvUUxDVUYiLCJhbXIiOlsicHdkIl0sImFwcGlkIjoiZjkyZGRiMDUtYjc1Yy00NDU5LTkxMGYtNzNjNThkNzVmNWY1IiwiYXBwaWRhY3IiOiIxIiwiaXBhZGRyIjoiMjcuNC4xNDEuMjgiLCJsb2dpbl9oaW50IjoiTy5DaVEzWVRFeE5XRXpaUzAxTkRVeUxUUXhOemt0T0RjNE5DMWpaRGN6TWpReFpUTXlaV01TSkdJMFpETTBaVFF5TFRjNVlUWXRORGM0WlMxaU0yRm1MVEV5WTJVM016RXhabUV3T1JvbmJHOW5aWE5vTURGQVpXNWphWEJvWlhKb1pXRnNkR2d1YjI1dGFXTnliM052Wm5RdVkyOXRJQ0E9IiwibmFtZSI6ImxvZ2VzaCIsIm9pZCI6IjdhMTE1YTNlLTU0NTItNDE3OS04Nzg0LWNkNzMyNDFlMzJlYyIsInByZWZlcnJlZF91c2VybmFtZSI6ImxvZ2VzaDAxQGVuY2lwaGVyaGVhbHRoLm9ubWljcm9zb2Z0LmNvbSIsInJoIjoiMC5BYmNBUWs3VHRLWjVqa2V6cnhMT2N4SDZDUVhiTGZsY3QxbEVrUTl6eFkxMTlmWEpBSDguIiwicm9sZXMiOlsiQURNSU4iXSwic2NwIjoiZW5jaXBoZXJoZWFsdGgtbXVsdGl0ZW5hbnQuc2NvcGUiLCJzaWQiOiIxMzg0YWEyMC04ZDg0LTRkZjUtODYzYy05MWJiZWVmNDUwOTUiLCJzdWIiOiJ0eTNGa3VjRDlnbEVDeFVfWW82MFRhUWVxU29ybG5yYjM2MVRPcWxlc1RNIiwidGVuYW50X2N0cnkiOiJVUyIsInRlbmFudF9yZWdpb25fc2NvcGUiOiJOQSIsInRpZCI6ImI0ZDM0ZTQyLTc5YTYtNDc4ZS1iM2FmLTEyY2U3MzExZmEwOSIsInVuaXF1ZV9uYW1lIjoibG9nZXNoMDFAZW5jaXBoZXJoZWFsdGgub25taWNyb3NvZnQuY29tIiwidXBuIjoibG9nZXNoMDFAZW5jaXBoZXJoZWFsdGgub25taWNyb3NvZnQuY29tIiwidXRpIjoiRks0M2g4N0JkMGFwZUcyTW83eDhBQSIsInZlciI6IjEuMCIsIndpZHMiOlsiYjc5ZmJmNGQtM2VmOS00Njg5LTgxNDMtNzZiMTk0ZTg1NTA5Il19.VGRvLuKUIo4x0GgXOVdRZcyUZ8aBt-mOoYc_8663mpieeHrHme62CMljU8N5zP0Uc1rmPwJ1hDRAfAsXBqS4zbL9xQ0eylRyhl5iXY6iTxM2aFubRIjVbrqS5XQAP4I5Y_DRvR3QrSKCt2CKlCy3ph0IOm2fVWEMQoyZIXr95VRSZwhulpEH6c4ShO8A2dfnax2IjXkyqsePErs9LC4hEjus4vjoifmLnPgxeScNheWFm56b04TmnYmsdmNPzCVMvXqd3_onTZyJ315ef8H0GnZ0qC8US3aO7sG3xVwopu_feQUK2EtElOp0oCCIjBoWST4HnvCvu2mk8fT6mXgr6A\"\n        },\n        body: JSON.stringify({\n          name: username\n        })\n      });\n\n      // Handle the response if needed\n      const result = await response.json();\n    } catch (error) {\n      throw new Error('Error adding user to the database:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: userData.connected ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"current-user\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Welcome back \", userData.username, \" !\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"member-list\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => {\n              setTab(\"CHATROOM\");\n            },\n            className: `member ${tab === \"CHATROOM\" && \"active\"}`,\n            children: \"Chatroom\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 29\n          }, this), memberList === null || memberList === void 0 ? void 0 : (_memberList$filter = memberList.filter(x => x !== (userData === null || userData === void 0 ? void 0 : userData.username))) === null || _memberList$filter === void 0 ? void 0 : _memberList$filter.map((name, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => {\n              setTab(name);\n              onTabChange(name);\n            },\n            className: `member ${tab === name && \"active\"}`,\n            children: name\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 33\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 21\n      }, this), tab === \"CHATROOM\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"chat-messages\",\n          children: publicChats.map((chat, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: `message-container ${chat.senderName === userData.username ? 'self' : 'other'}`,\n            children: [chat.senderName !== userData.username && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"avatar\",\n              children: chat.senderName.charAt(0).toUpperCase()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 71\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"message-data\",\n                children: chat.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 288,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"timestamp\",\n                children: chat.date\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 289,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 29\n            }, this), chat.senderName === userData.username && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"avatar self\",\n              children: chat.senderName.charAt(0).toUpperCase()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 71\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"send-message\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"input-message\",\n            placeholder: \"enter the message\",\n            value: userData.message,\n            onChange: handleMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"send-button\",\n            onClick: sendValue,\n            children: \"send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 44\n      }, this), tab !== \"CHATROOM\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"chat-messages\",\n          children: message === null || message === void 0 ? void 0 : message.map((chat, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: `message-container ${chat.senderName === userData.username ? \"self\" : \"other\"}`,\n            children: [chat.senderName !== userData.username && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"avatar\",\n              children: chat.senderName.charAt(0).toUpperCase()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 79\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"message-data\",\n                children: chat.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 309,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"timestamp\",\n                children: chat.date\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 310,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 37\n            }, this), chat.senderName === userData.username && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"avatar self\",\n              children: chat.senderName.charAt(0).toUpperCase()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 79\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 32\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"send-message\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"input-message\",\n            placeholder: \"enter the message\",\n            value: userData.message,\n            onChange: handleMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"send-button\",\n            onClick: sendPrivateValue,\n            children: \"send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 44\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"register\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"user-name\",\n        placeholder: \"Enter your name\",\n        name: \"userName\",\n        value: userData.username,\n        onChange: handleUsername,\n        margin: \"normal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => registerUser(),\n        children: \"connect\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 268,\n    columnNumber: 9\n  }, this);\n};\n_s(ChatRoom, \"mOwn60+paorCY4Jcm+WWA1RmHD0=\");\n_c = ChatRoom;\nexport default ChatRoom;\nvar _c;\n$RefreshReg$(_c, \"ChatRoom\");","map":{"version":3,"names":["React","useEffect","useState","over","SockJS","jsxDEV","_jsxDEV","stompClient","ChatRoom","_s","_memberList$filter","privateChats","setPrivateChats","message","setMessages","publicChats","setPublicChats","memberList","setMemberList","tab","setTab","userData","setUserData","username","receivername","connected","fetchUsers","response","fetch","headers","data","json","temp","forEach","item","push","name","error","console","onTabChange","connect","Sock","onConnected","onError","subscribe","onMessageReceived","onPrivateMessage","onUpdatedUsersHistory","getCurrentTimestamp","now","Date","hours","getHours","minutes","getMinutes","day","getDate","month","getMonth","year","getFullYear","formattedTime","payload","payloadData","JSON","parse","body","status","receiverName","prevPublicChats","log","err","handleMessage","event","value","target","sendValue","chatMessage","senderName","date","send","stringify","sendPrivateValue","handleUsername","registerUser","trim","alert","isUsernameExists","some","user","publicMessages","filter","privateMessages","addUserToDatabase","messages","_ref","_ref2","includes","method","result","Error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","x","map","index","chat","charAt","toUpperCase","type","placeholder","onChange","id","margin","_c","$RefreshReg$"],"sources":["/Users/logeshramesh/Projects/websocket-springboot-01/Java-chatapp/chatclient/src/components/ChatRoom.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { over } from 'stompjs';\nimport SockJS from 'sockjs-client';\n\nvar stompClient = null;\nconst ChatRoom = () => {\n    const [privateChats, setPrivateChats] = useState([]);\n    const [message, setMessages] = useState([]);\n    const [publicChats, setPublicChats] = useState([]);\n    const [memberList, setMemberList] = useState([]);\n    const [tab, setTab] = useState(\"CHATROOM\");\n\n\n    const [userData, setUserData] = useState({\n        username: '',\n        receivername: '',\n        connected: false,\n        message: ''\n    });\n    \n\n    // useEffect(() => {\n    //     // Check if userData is available in localStorage\n    //     const storedUserData = localStorage.getItem('userData');\n    //     if (storedUserData) {\n    //       try {\n    //         const parsedUserData = JSON.parse(storedUserData);\n      \n    //         // If userData is available and connected is true, establish the connection\n    //         if (parsedUserData && parsedUserData.connected) {\n    //           setUserData(parsedUserData);\n    //           connect();\n    //         }\n    //       } catch (error) {\n    //         console.error('Error parsing userData:', error);\n    //       }\n    //     }\n    //   }, []);\n      \n      \n   \n\n    const fetchUsers = async () => {\n        try {\n\n            const response = await fetch('http://localhost:8080/api/users', {\n                    headers: {\n                        'Content-Type': 'application/json',\n                        'X-Tenant' : 'default',\n                        'Authorization' : \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6IjVCM25SeHRRN2ppOGVORGMzRnkwNUtmOTdaRSIsImtpZCI6IjVCM25SeHRRN2ppOGVORGMzRnkwNUtmOTdaRSJ9.eyJhdWQiOiJhcGk6Ly9mOTJkZGIwNS1iNzVjLTQ0NTktOTEwZi03M2M1OGQ3NWY1ZjUiLCJpc3MiOiJodHRwczovL3N0cy53aW5kb3dzLm5ldC9iNGQzNGU0Mi03OWE2LTQ3OGUtYjNhZi0xMmNlNzMxMWZhMDkvIiwiaWF0IjoxNzA1MzAyNzEwLCJuYmYiOjE3MDUzMDI3MTAsImV4cCI6MTcwNTMwODExNiwiYWNjdCI6MCwiYWNyIjoiMSIsImFpbyI6IkFUUUF5LzhWQUFBQWVVTmVGZG5OaWtPc0ZRbzlTK3RTSlc1THpjcTljVEtrSm5uU3F1NHBRUHdjNlF0NUw3YjdWNVY5TlFvUUxDVUYiLCJhbXIiOlsicHdkIl0sImFwcGlkIjoiZjkyZGRiMDUtYjc1Yy00NDU5LTkxMGYtNzNjNThkNzVmNWY1IiwiYXBwaWRhY3IiOiIxIiwiaXBhZGRyIjoiMjcuNC4xNDEuMjgiLCJsb2dpbl9oaW50IjoiTy5DaVEzWVRFeE5XRXpaUzAxTkRVeUxUUXhOemt0T0RjNE5DMWpaRGN6TWpReFpUTXlaV01TSkdJMFpETTBaVFF5TFRjNVlUWXRORGM0WlMxaU0yRm1MVEV5WTJVM016RXhabUV3T1JvbmJHOW5aWE5vTURGQVpXNWphWEJvWlhKb1pXRnNkR2d1YjI1dGFXTnliM052Wm5RdVkyOXRJQ0E9IiwibmFtZSI6ImxvZ2VzaCIsIm9pZCI6IjdhMTE1YTNlLTU0NTItNDE3OS04Nzg0LWNkNzMyNDFlMzJlYyIsInByZWZlcnJlZF91c2VybmFtZSI6ImxvZ2VzaDAxQGVuY2lwaGVyaGVhbHRoLm9ubWljcm9zb2Z0LmNvbSIsInJoIjoiMC5BYmNBUWs3VHRLWjVqa2V6cnhMT2N4SDZDUVhiTGZsY3QxbEVrUTl6eFkxMTlmWEpBSDguIiwicm9sZXMiOlsiQURNSU4iXSwic2NwIjoiZW5jaXBoZXJoZWFsdGgtbXVsdGl0ZW5hbnQuc2NvcGUiLCJzaWQiOiIxMzg0YWEyMC04ZDg0LTRkZjUtODYzYy05MWJiZWVmNDUwOTUiLCJzdWIiOiJ0eTNGa3VjRDlnbEVDeFVfWW82MFRhUWVxU29ybG5yYjM2MVRPcWxlc1RNIiwidGVuYW50X2N0cnkiOiJVUyIsInRlbmFudF9yZWdpb25fc2NvcGUiOiJOQSIsInRpZCI6ImI0ZDM0ZTQyLTc5YTYtNDc4ZS1iM2FmLTEyY2U3MzExZmEwOSIsInVuaXF1ZV9uYW1lIjoibG9nZXNoMDFAZW5jaXBoZXJoZWFsdGgub25taWNyb3NvZnQuY29tIiwidXBuIjoibG9nZXNoMDFAZW5jaXBoZXJoZWFsdGgub25taWNyb3NvZnQuY29tIiwidXRpIjoiRks0M2g4N0JkMGFwZUcyTW83eDhBQSIsInZlciI6IjEuMCIsIndpZHMiOlsiYjc5ZmJmNGQtM2VmOS00Njg5LTgxNDMtNzZiMTk0ZTg1NTA5Il19.VGRvLuKUIo4x0GgXOVdRZcyUZ8aBt-mOoYc_8663mpieeHrHme62CMljU8N5zP0Uc1rmPwJ1hDRAfAsXBqS4zbL9xQ0eylRyhl5iXY6iTxM2aFubRIjVbrqS5XQAP4I5Y_DRvR3QrSKCt2CKlCy3ph0IOm2fVWEMQoyZIXr95VRSZwhulpEH6c4ShO8A2dfnax2IjXkyqsePErs9LC4hEjus4vjoifmLnPgxeScNheWFm56b04TmnYmsdmNPzCVMvXqd3_onTZyJ315ef8H0GnZ0qC8US3aO7sG3xVwopu_feQUK2EtElOp0oCCIjBoWST4HnvCvu2mk8fT6mXgr6A\"\n                    },\n            });\n            const data = await response.json();\n\n            const temp = [];\n            data.forEach(item => {\n                temp.push(item.name);\n            });\n            setMemberList(temp);\n        } catch (error) {\n            console.error('Error fetching users:', error);\n        }\n    };\n\n\n    useEffect(() => {\n        fetchUsers();\n    }, []);\n\n\n    useEffect(() => {\n        if(tab !== 'CHATROOM') onTabChange(tab);\n    }, [privateChats]);\n\n\n    const connect = () => {\n\n        let Sock = new SockJS('http://localhost:8080/ws', {\n            headers: {\n                'Content-Type': 'application/json',\n                'X-Tenant' : 'default',\n                'Authorization' : \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6IjVCM25SeHRRN2ppOGVORGMzRnkwNUtmOTdaRSIsImtpZCI6IjVCM25SeHRRN2ppOGVORGMzRnkwNUtmOTdaRSJ9.eyJhdWQiOiJhcGk6Ly9mOTJkZGIwNS1iNzVjLTQ0NTktOTEwZi03M2M1OGQ3NWY1ZjUiLCJpc3MiOiJodHRwczovL3N0cy53aW5kb3dzLm5ldC9iNGQzNGU0Mi03OWE2LTQ3OGUtYjNhZi0xMmNlNzMxMWZhMDkvIiwiaWF0IjoxNzA1MzAyNzEwLCJuYmYiOjE3MDUzMDI3MTAsImV4cCI6MTcwNTMwODExNiwiYWNjdCI6MCwiYWNyIjoiMSIsImFpbyI6IkFUUUF5LzhWQUFBQWVVTmVGZG5OaWtPc0ZRbzlTK3RTSlc1THpjcTljVEtrSm5uU3F1NHBRUHdjNlF0NUw3YjdWNVY5TlFvUUxDVUYiLCJhbXIiOlsicHdkIl0sImFwcGlkIjoiZjkyZGRiMDUtYjc1Yy00NDU5LTkxMGYtNzNjNThkNzVmNWY1IiwiYXBwaWRhY3IiOiIxIiwiaXBhZGRyIjoiMjcuNC4xNDEuMjgiLCJsb2dpbl9oaW50IjoiTy5DaVEzWVRFeE5XRXpaUzAxTkRVeUxUUXhOemt0T0RjNE5DMWpaRGN6TWpReFpUTXlaV01TSkdJMFpETTBaVFF5TFRjNVlUWXRORGM0WlMxaU0yRm1MVEV5WTJVM016RXhabUV3T1JvbmJHOW5aWE5vTURGQVpXNWphWEJvWlhKb1pXRnNkR2d1YjI1dGFXTnliM052Wm5RdVkyOXRJQ0E9IiwibmFtZSI6ImxvZ2VzaCIsIm9pZCI6IjdhMTE1YTNlLTU0NTItNDE3OS04Nzg0LWNkNzMyNDFlMzJlYyIsInByZWZlcnJlZF91c2VybmFtZSI6ImxvZ2VzaDAxQGVuY2lwaGVyaGVhbHRoLm9ubWljcm9zb2Z0LmNvbSIsInJoIjoiMC5BYmNBUWs3VHRLWjVqa2V6cnhMT2N4SDZDUVhiTGZsY3QxbEVrUTl6eFkxMTlmWEpBSDguIiwicm9sZXMiOlsiQURNSU4iXSwic2NwIjoiZW5jaXBoZXJoZWFsdGgtbXVsdGl0ZW5hbnQuc2NvcGUiLCJzaWQiOiIxMzg0YWEyMC04ZDg0LTRkZjUtODYzYy05MWJiZWVmNDUwOTUiLCJzdWIiOiJ0eTNGa3VjRDlnbEVDeFVfWW82MFRhUWVxU29ybG5yYjM2MVRPcWxlc1RNIiwidGVuYW50X2N0cnkiOiJVUyIsInRlbmFudF9yZWdpb25fc2NvcGUiOiJOQSIsInRpZCI6ImI0ZDM0ZTQyLTc5YTYtNDc4ZS1iM2FmLTEyY2U3MzExZmEwOSIsInVuaXF1ZV9uYW1lIjoibG9nZXNoMDFAZW5jaXBoZXJoZWFsdGgub25taWNyb3NvZnQuY29tIiwidXBuIjoibG9nZXNoMDFAZW5jaXBoZXJoZWFsdGgub25taWNyb3NvZnQuY29tIiwidXRpIjoiRks0M2g4N0JkMGFwZUcyTW83eDhBQSIsInZlciI6IjEuMCIsIndpZHMiOlsiYjc5ZmJmNGQtM2VmOS00Njg5LTgxNDMtNzZiMTk0ZTg1NTA5Il19.VGRvLuKUIo4x0GgXOVdRZcyUZ8aBt-mOoYc_8663mpieeHrHme62CMljU8N5zP0Uc1rmPwJ1hDRAfAsXBqS4zbL9xQ0eylRyhl5iXY6iTxM2aFubRIjVbrqS5XQAP4I5Y_DRvR3QrSKCt2CKlCy3ph0IOm2fVWEMQoyZIXr95VRSZwhulpEH6c4ShO8A2dfnax2IjXkyqsePErs9LC4hEjus4vjoifmLnPgxeScNheWFm56b04TmnYmsdmNPzCVMvXqd3_onTZyJ315ef8H0GnZ0qC8US3aO7sG3xVwopu_feQUK2EtElOp0oCCIjBoWST4HnvCvu2mk8fT6mXgr6A\"\n            },\n        });\n        stompClient = over(Sock);\n        stompClient.connect({}, onConnected, onError);\n    }\n\n    const onConnected = () => {\n        \n        setUserData({ ...userData, \"connected\": true });\n        // localStorage.setItem('userData', JSON.stringify({ ...userData, \"connected\": true }));\n\n        stompClient.subscribe('/chatroom/public', onMessageReceived);\n        stompClient.subscribe('/user/' + userData.username + '/private', onPrivateMessage);\n        stompClient.subscribe('/user/' + userData.username + '/topic', onUpdatedUsersHistory)\n        // userJoin();\n    }\n\n    // const userJoin = () => {\n    //     var chatMessage = {\n    //         senderName: userData.username,\n    //         status: \"JOIN\"\n    //     };\n    //     stompClient.send(\"/app/message\", {}, JSON.stringify(chatMessage));\n    // }\n\n\n\n\n    const getCurrentTimestamp = () => {\n        const now = new Date();\n        const hours = now.getHours();\n        const minutes = now.getMinutes();\n        const day = now.getDate();\n        const month = now.getMonth() + 1;\n        const year = now.getFullYear();\n      \n        const formattedTime =\n          `${day < 10 ? '0' : ''}${day}-${month < 10 ? '0' : ''}${month}-${year}, ${hours % 12 || 12}:${minutes < 10 ? '0' : ''}${minutes} ${hours >= 12 ? 'pm' : 'am'}`;\n      \n        return formattedTime;\n      };\n\n    const onMessageReceived = (payload) => {\n        var payloadData = JSON.parse(payload.body);\n\n        if (payloadData.status === \"MESSAGE\" && !payloadData.receiverName) {\n            setPublicChats(prevPublicChats => [...prevPublicChats, payloadData]);\n        }\n    };\n\n\n\n    const onPrivateMessage = (payload) => {\n        const payloadData = JSON.parse(payload.body);\n        setPrivateChats(temp => [...temp, payloadData]);\n\n    };\n\n    const onUpdatedUsersHistory = (payload) => {\n        const payloadData = JSON.parse(payload.body);\n        console.log(payload);\n\n    };\n\n\n    const onError = (err) => {\n        console.log(err);\n\n    }\n\n    const handleMessage = (event) => {\n        const { value } = event.target;\n        setUserData({ ...userData, \"message\": value });\n    }\n    const sendValue = () => {\n        if (stompClient) {\n            var chatMessage = {\n                senderName: userData.username,\n                message: userData.message,\n                date:getCurrentTimestamp(),\n                status: \"MESSAGE\"\n            };\n            \n            stompClient.send(\"/app/message\", {}, JSON.stringify(chatMessage));\n            setUserData({ ...userData, \"message\": \"\" });\n        }\n    }\n\n    const sendPrivateValue = () => {\n        if (stompClient) {\n            const chatMessage = {\n                senderName: userData.username,\n                receiverName: tab,\n                message: userData.message,\n                date:getCurrentTimestamp(),\n                status: \"MESSAGE\"\n            };\n\n            setPrivateChats([...privateChats, chatMessage]);\n            stompClient.send(\"/app/private-message\", {}, JSON.stringify(chatMessage));\n            setUserData({ ...userData, \"message\": \"\" });\n        }\n    }\n\n    const handleUsername = (event) => {\n        const { value } = event.target;\n        setUserData({ ...userData, \"username\": value });\n    }\n\n\n\n\n    const registerUser = async () => {\n\n        if (!userData.username.trim()) {\n            alert('Username should not be empty');\n            return;\n        }\n\n         fetchUsers();\n        // Check if the entered username exists in the memberList\n        const isUsernameExists = memberList.some(user => user === userData.username);\n\n        if (isUsernameExists) {\n            try {\n                // Fetch messages for the user\n                const response = await fetch(`http://localhost:8080/api/messages/${userData.username}`);\n                const data = await response.json();\n\n                // Separate messages into public and private chats\n               \n                const publicMessages = data.filter(message => !message.receiverName);\n                const privateMessages = data.filter(message => message.receiverName);\n\n               \n\n                setPublicChats(publicMessages);\n                setPrivateChats(privateMessages);\n\n                // Connect to WebSocket after updating state\n                connect();\n            } catch (error) {\n                console.error('Error fetching user messages:', error);\n            }\n        }else {\n            try {\n                // If username doesn't exist, add user to the database\n                await addUserToDatabase(userData.username);\n    \n                // After adding user to the database, connect to WebSocket\n                connect();\n            } catch (error) {\n                console.error('Error adding user to the database:', error);\n            }\n        }\n    };\n\n    const onTabChange = (name) => {\n        const messages = privateChats?.filter(item => [name, userData?.username]?.includes(item.senderName) && [name, userData.username]?.includes(item.receiverName));\n        setMessages(messages);\n    }\n\n\n    const addUserToDatabase = async (username) => {\n        try {\n            // Perform the necessary API call to add the user to the database\n            const response = await fetch('http://localhost:8080/api/addUser', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'X-Tenant' : 'default',\n                    'Authorization' : \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6IjVCM25SeHRRN2ppOGVORGMzRnkwNUtmOTdaRSIsImtpZCI6IjVCM25SeHRRN2ppOGVORGMzRnkwNUtmOTdaRSJ9.eyJhdWQiOiJhcGk6Ly9mOTJkZGIwNS1iNzVjLTQ0NTktOTEwZi03M2M1OGQ3NWY1ZjUiLCJpc3MiOiJodHRwczovL3N0cy53aW5kb3dzLm5ldC9iNGQzNGU0Mi03OWE2LTQ3OGUtYjNhZi0xMmNlNzMxMWZhMDkvIiwiaWF0IjoxNzA1MzAyNzEwLCJuYmYiOjE3MDUzMDI3MTAsImV4cCI6MTcwNTMwODExNiwiYWNjdCI6MCwiYWNyIjoiMSIsImFpbyI6IkFUUUF5LzhWQUFBQWVVTmVGZG5OaWtPc0ZRbzlTK3RTSlc1THpjcTljVEtrSm5uU3F1NHBRUHdjNlF0NUw3YjdWNVY5TlFvUUxDVUYiLCJhbXIiOlsicHdkIl0sImFwcGlkIjoiZjkyZGRiMDUtYjc1Yy00NDU5LTkxMGYtNzNjNThkNzVmNWY1IiwiYXBwaWRhY3IiOiIxIiwiaXBhZGRyIjoiMjcuNC4xNDEuMjgiLCJsb2dpbl9oaW50IjoiTy5DaVEzWVRFeE5XRXpaUzAxTkRVeUxUUXhOemt0T0RjNE5DMWpaRGN6TWpReFpUTXlaV01TSkdJMFpETTBaVFF5TFRjNVlUWXRORGM0WlMxaU0yRm1MVEV5WTJVM016RXhabUV3T1JvbmJHOW5aWE5vTURGQVpXNWphWEJvWlhKb1pXRnNkR2d1YjI1dGFXTnliM052Wm5RdVkyOXRJQ0E9IiwibmFtZSI6ImxvZ2VzaCIsIm9pZCI6IjdhMTE1YTNlLTU0NTItNDE3OS04Nzg0LWNkNzMyNDFlMzJlYyIsInByZWZlcnJlZF91c2VybmFtZSI6ImxvZ2VzaDAxQGVuY2lwaGVyaGVhbHRoLm9ubWljcm9zb2Z0LmNvbSIsInJoIjoiMC5BYmNBUWs3VHRLWjVqa2V6cnhMT2N4SDZDUVhiTGZsY3QxbEVrUTl6eFkxMTlmWEpBSDguIiwicm9sZXMiOlsiQURNSU4iXSwic2NwIjoiZW5jaXBoZXJoZWFsdGgtbXVsdGl0ZW5hbnQuc2NvcGUiLCJzaWQiOiIxMzg0YWEyMC04ZDg0LTRkZjUtODYzYy05MWJiZWVmNDUwOTUiLCJzdWIiOiJ0eTNGa3VjRDlnbEVDeFVfWW82MFRhUWVxU29ybG5yYjM2MVRPcWxlc1RNIiwidGVuYW50X2N0cnkiOiJVUyIsInRlbmFudF9yZWdpb25fc2NvcGUiOiJOQSIsInRpZCI6ImI0ZDM0ZTQyLTc5YTYtNDc4ZS1iM2FmLTEyY2U3MzExZmEwOSIsInVuaXF1ZV9uYW1lIjoibG9nZXNoMDFAZW5jaXBoZXJoZWFsdGgub25taWNyb3NvZnQuY29tIiwidXBuIjoibG9nZXNoMDFAZW5jaXBoZXJoZWFsdGgub25taWNyb3NvZnQuY29tIiwidXRpIjoiRks0M2g4N0JkMGFwZUcyTW83eDhBQSIsInZlciI6IjEuMCIsIndpZHMiOlsiYjc5ZmJmNGQtM2VmOS00Njg5LTgxNDMtNzZiMTk0ZTg1NTA5Il19.VGRvLuKUIo4x0GgXOVdRZcyUZ8aBt-mOoYc_8663mpieeHrHme62CMljU8N5zP0Uc1rmPwJ1hDRAfAsXBqS4zbL9xQ0eylRyhl5iXY6iTxM2aFubRIjVbrqS5XQAP4I5Y_DRvR3QrSKCt2CKlCy3ph0IOm2fVWEMQoyZIXr95VRSZwhulpEH6c4ShO8A2dfnax2IjXkyqsePErs9LC4hEjus4vjoifmLnPgxeScNheWFm56b04TmnYmsdmNPzCVMvXqd3_onTZyJ315ef8H0GnZ0qC8US3aO7sG3xVwopu_feQUK2EtElOp0oCCIjBoWST4HnvCvu2mk8fT6mXgr6A\"\n                },\n                body: JSON.stringify({ name: username }),\n            });\n    \n            // Handle the response if needed\n            const result = await response.json();\n           \n        } catch (error) {\n            throw new Error('Error adding user to the database:', error);\n        }\n    };\n\n    return (\n        <div className=\"container\">\n            {userData.connected ?\n                <div className=\"chat-box\">\n                    <div className='current-user'>\n                        <h3>Welcome back {userData.username} !</h3>\n                    </div>\n                    <div className=\"member-list\">\n                        <ul>\n                            <li onClick={() => { setTab(\"CHATROOM\") }} className={`member ${tab === \"CHATROOM\" && \"active\"}`}>Chatroom</li>\n                            {memberList?.filter(x => x !== userData?.username)?.map((name, index) => (\n                                <li onClick={() => { setTab(name); onTabChange(name) }} className={`member ${tab === name && \"active\"}`} key={index}>{name}</li>\n                            ))}\n                        </ul>\n                    </div>\n                    {tab === \"CHATROOM\" && <div className=\"chat-content\">\n                    <ul className=\"chat-messages\">\n                        {publicChats.map((chat, index) => (\n                            <li className={`message-container ${chat.senderName === userData.username ? 'self' : 'other'}`} key={index}>\n                            {chat.senderName !== userData.username && <div className=\"avatar\">{chat.senderName.charAt(0).toUpperCase()}</div>}\n                            <div className=\"message-content\">\n                                <div className=\"message-data\">{chat.message}</div>\n                                <div className=\"timestamp\">{chat.date}</div>\n                            </div>\n                            {chat.senderName === userData.username && <div className=\"avatar self\">{chat.senderName.charAt(0).toUpperCase()}</div>}\n                            </li>\n                        ))}\n                        </ul>\n\n\n                        <div className=\"send-message\">\n                            <input type=\"text\" className=\"input-message\" placeholder=\"enter the message\" value={userData.message} onChange={handleMessage} />\n                            <button type=\"button\" className=\"send-button\" onClick={sendValue}>send</button>\n                        </div>\n                    </div>}\n                    {tab !== \"CHATROOM\" && <div className=\"chat-content\">\n                        <ul className=\"chat-messages\">\n                            {message?.map((chat, index) => (\n\n                               <li className={`message-container ${chat.senderName === userData.username ?\"self\" :\"other\"}`} key={index}>\n                                    {chat.senderName !== userData.username && <div className=\"avatar\">{chat.senderName.charAt(0).toUpperCase()}</div>}\n                                    <div className=\"message-content\">\n                                        <div className=\"message-data\">{chat.message}</div>\n                                        <div className=\"timestamp\">{chat.date}</div>\n                                    </div>\n                                    {chat.senderName === userData.username && <div className=\"avatar self\">{chat.senderName.charAt(0).toUpperCase()}</div>}\n                                </li>\n\n                            ))}\n                        </ul>\n\n                        <div className=\"send-message\">\n                            <input type=\"text\" className=\"input-message\" placeholder=\"enter the message\" value={userData.message} onChange={handleMessage} />\n                            <button type=\"button\" className=\"send-button\" onClick={sendPrivateValue}>send</button>\n                        </div>\n                    </div>}\n                </div>\n                :\n                <div className=\"register\">\n                    <input\n                        id=\"user-name\"\n                        placeholder=\"Enter your name\"\n                        name=\"userName\"\n                        value={userData.username}\n                        onChange={handleUsername}\n                        margin=\"normal\"\n                    />\n                    <button type=\"button\" onClick={() => registerUser()}>\n                        connect\n                    </button>\n                </div>}\n        </div>\n    )\n}\n\nexport default ChatRoom\n\n\n\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}